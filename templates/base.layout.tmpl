{{define "base"}}
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <title>My Nice Page</title>

        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" 
            integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/css/datepicker-bs4.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" type = "text/css" href="static/css/styles.css">
        
    </head>

    <body>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">Navbar</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                    <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Rooms
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <li><a class="dropdown-item" href="/generals-quarters">General's Quarters</a></li>
                        <li><a class="dropdown-item" href="/majors-suites">Major's Suite</a></li>
                    </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/search-availability" tabindex="-1" aria-disabled="true">Book Now</a>
                    </li>
                    <li class="nav-item">
                    <a class="nav-link" href="/contact" tabindex="-1" aria-disabled="true">Contact</a>
                    </li>
                </ul>
                <!-- <form class="d-flex">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form> -->
                </div>
            </div>
        </nav>

        {{block "content" .}}

        {{end}}

        
        <div class="row my-footer">
            <div class="col">
                Left
            </div>
            <div class="col">
                Middle
            </div>
            <div class="col">
                Right
            </div>
        </div>


        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js" integrity="sha384-eMNCOe7tC1doHpGoWe/6oMVemdAVTMs2xqW4mwXrXsW0L84Iytr2wi5v2QjrP/xp" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js" integrity="sha384-cn7l7gDp0eyniUwwAZgrzD06kc/tftFf19TOAs2zVinnD/C7E91j9yyk5//jjpt/" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.4/dist/js/datepicker-full.min.js"></script>
        <script src="https://unpkg.com/notie"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    

        {{block "js" .}}

        {{end}}

        <script>

            let attention = Prompt();
            console.log("I'm printing from Javascript!!!!");
            // alert("Hello");
            // let myEl = document.getElementById("myParagraph");
            // myEl.classList.add("redText")

            // Example starter JavaScript for disabling form submissions if there are invalid fields
            (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            let forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
                })
            })()




            

            function notify(msg, msgType) {
                notie.alert({
                    type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                    text: msg,
                    // stay: Boolean, // optional, default = false
                    // time: Number, // optional, default = 3, minimum = 1,
                    // position: String // optional, default = 'top', enum: ['top', 'bottom']
                })
            }

            function notifyModal(title, text, icon, confirmButtonText) {
                Swal.fire({
                    title: title,
                    html: text,
                    icon: icon,
                    confirmButtonText: confirmButtonText
                })
                
            }

            {{with .Error}}
            notify("{{.}}", "error");
            {{end}}

            {{with .Flash}}
            notify("{{.}}", "success");
            {{end}}

            {{with .Warning}}
            notify("{{.}}", "warning");
            {{end}}

            function Prompt() {
                let toast = function (c) {
                    const {
                        msg = "",
                        icon = "success",
                        position = "top-end",
                    } = c;

                    const Toast = Swal.mixin({
                        toast: true,
                        title: msg,
                        position: position,
                        icon: icon,
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                        })

                        Toast.fire({})

                }

                let success = function (c) {
                    const {
                        msg = "",
                        title =  "",
                        footer = "",
                    } = c;

                    Swal.fire({
                        icon: 'success',
                        title: 'Oops...',
                        text: msg,
                        footer: footer,
                    });
                }

                let error = function (c) {
                    const {
                        msg = "",
                        title =  "",
                        footer = "",
                    } = c;

                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: msg,
                        footer: footer,
                    });
                }

                async function custom(c) {
                    const {
                        msg = "",
                        title = "",
                    } = c;

                    const { value: result } = await Swal.fire({
                        title: title,
                        html: msg,
                        backdrop: false,
                        focusConfirm: false,
                        showCancelButton: true,
                        willOpen: () => {
                            if (c.willOpen !== undefined) {
                                c.willOpen();
                            }
                        },
                        preConfirm: () => {
                            return [
                            document.getElementById('start').value,
                            document.getElementById('end').value
                            ]
                        },
                        didOpen: () => {
                            if (c.didOpen !== undefined) {
                                c.didOpen();
                            }
                        }
                    })

                    if (result) {
                        if (result.dismiss !== Swal.DismissReason) {
                            if (result.value !== "") {
                                if (c.callback !== undefined) {
                                    c.callback(result);
                                }
                            } else {
                                c.callback(false);
                            }
                        } else {
                            c.callback(false);
                        }
                    }
                
                }

                return {
                    toast: toast,
                    success: success,
                    error: error,
                    custom: custom,
                }
            }

            

        </script>

    </body>

</html>
{{end}}